#include <iostream>
#include <Windows.h>
#include "TestOPI.h"
#include "header_validity.h"
using namespace std;
//вопросы по опи
string questionsOPI[] = {
"1) Что такое жизненный цикл ПО?\n\
    1. Нормативно-технический документ, устанавливающий нормы и правила по отношению к объекту стандартизации\n\
    2. Программа, работающая без авторского присутствия\n\
    3. Непрерывный процесс с момента принятия решения о создании ПО до снятия его с эксплуатации \n\
    4. Комплекс программных средств, предназначенных для автоматизации процесса разработки\n",
    "2) Unicode это - \n\
    1. 8-битная кодировка для представления десятичных цифр, латинского и национального алфавитов, знаков препинания и управляющих символов.\n\
    2. Формальная знаковая система, предназначенная для записи компьютерных программ. \n\
    3. Набор стандартов, описывающих интерфейсы между операционной системой и прикладной программой библиотеку языка C и набор приложений и их интерфейсов\n\
    4. Стандарт кодирования символов, позволяющий представить знаки почти всех письменных языков\n",
    "3) Что представляет собой стандарт POSIX ? \n\
    1. 8-битная кодировка для представления десятичных цифр, латинского и национального алфавитов, знаков препинания и управляющих символов.\n\
    2. Набор стандартов, описывающих интерфейсы между операционной системой и прикладной программой библиотеку языка C и набор приложений и их интерфейсов\n\
    3. Набор спецификаций, определяющих его синтаксис, семантику, может исторически развиваться. \n\
    4. Программные средства, которые обеспечивают определенный вариант стандарта языка.\n",
    "4) Что такое алгоритм? \n\
    1. Набор инструкций, предназначенный для многократного выполнения. \n\
    2. Единичное выполнение тела цикла. \n\
    3. Это величина, изменяющаяся на каждой итерации цикла \n\
    4. Совокупность точно заданных правил, с помощью которой можно получить решение задачи за конечн ое число шагов. \n",
    "5) Что такое парадигма программирования? \n\
    1. Совокупность идей и понятий, определяющих стиль написания компьютерных программ.\n\
    2. Модификация программного продукта при необходимости исправить ошибки, выявленные в процессе эксплуатации\n\
    3. Создание текстовых и графических материалов по использованию программы в помощь пользователям и разработчикам\n\
    4. Набор конкретных значений исходных данных, при которых известен ожидаемый результат работы программы.\n",
    "6) Какую парадигму программирования также называют 'программирование сверху вниз'?\n\
    1. Нисходщая\n\
    2. Модульная\n\
    3. Структурная\n\
    4. Глобальная\n",
    "7) Какой принцип программирования подразумевает разделение программы на маленькие, независимые модули?\n\
    1. Инкапсуляция\n\
    2. Абстракция\n\
    3. Наследование\n\
    4. Модульность \n",
    "8) Выберите правильно наименование переменной\n\
    1. 1riew\n\
    2. abcdef\n\
    3. firstName\n\
    4. дерево\n",
    "9) Какая структура данных используется для хранения элементов в порядке 'первый вошел, первый вышел' ?\n\
    1. Стек (Stack) \n\
    2. Очередь(Queue) \n\
    3. Связанный список(Linked List) \n\
    4. Дерево(Tree) \n",
    "10) Какая из методологий разработки включает проведение митингов?\n\
    1. Agile / XP\n\
    2. Agile / Kanban\n\
    3. Agile / Scrum\n\
    4. Agile / TDD\n",
};

int* TestOPI(int *answers) {
    answers = new int[10];
    setlocale(LC_CTYPE, "Russian");
    const int numquestionsOPI = 10;
    answers = new int[numquestionsOPI];
    for (int i = 0; i < numquestionsOPI; i++)
    {
        //ВЫВОД вопроса
        cout << questionsOPI[i];
        //ВВОД ответа
        char tempAnswer;//текущий ответ, не проверенный на валидность
        cin >> tempAnswer;
        //<проверка на валидность> если ответ валидный, добавляем его в массив ответов
        while (!check_answer_validity(tempAnswer)) {
            cin >> tempAnswer;
            if (check_answer_validity(tempAnswer))
            {
                answers[i] = tempAnswer - '0';/*конвертируем символ числа в число*/
            }
        }
        if (check_answer_validity(tempAnswer))
        {
            answers[i] = tempAnswer - '0';/*конвертируем символ числа в число*/
        }
    }
   return answers;
}

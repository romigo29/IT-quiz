#include <iostream>
#include <Windows.h>
#include "TestOAiP.h"
#include "header_validity.h"
using namespace std;
// Массив с вопросами 
string questionsOAIP[] = {
    "1) Компоновщик - это\n\
    1.	 Программа, которая принимает несколько объектных модулей и на их основе создает загрузочный модуль.\n\
    2.	 Транслятор с исходного языка на языке ассемблера в программу на машинном коде\n\
    3.	 Оптимизатор кода\n\
    4.	 Редактор кода\n",
    "2) Результатом работы компоновщика является:\n\
    1.	 Объектный модуль\n\
    2.	 Загрузочный  модуль\n\
    3.	 Исходный модуль\n\
    4.	 Абсолютный модуль\n",
    "3) Набор инструкций, выполняющийся непосредственно центральным процессором компьютера - это ...\n\
    1.	 Код ассемблера\n\
    2.	 Исходный код\n\
    3.	 Машинный код\n\
    4.	 Загрузочный код\n",
    "4) Алфавит языка программирования - это\n\
    1.	 Набор зарезервированных слов ЯП.\n\
    2.	 Набор символов, разрешенных к использованию языком программирования.\n\
    3.	 Набор переменных, созданных во время разработки кода\n\
    4.	 Символы латинского алфавита\n",
    "5)  Указатель в С++ - это \n\
    1.	 Переменная в которой хранится адрес другого объекта\n\
    2.	 Переменная который работает как псевдоним другого объекта или значения.\n\
    3.	 Значение переменной(то, что стоит после знака “ = ”)\n\
    4.	 Курсор мыши\n",
    "6) Исключение - это:\n\
    1.	Алгоритм, записанный на языке программирования;\n\
    2.	 Событие при выполнении программы, при котором ее дальнейшее выполнение становится бессмысленным.\n\
    3.	 Протокол взаимодействия компонентов компьютерной сети;\n\
    4.	 Ориентированный граф, указывающий порядок исполнения команд компьютера;\n",
    "7) #pragma once :s\n\
    1.	 Контролирует, чтобы конкретный включаемый файл при компиляции подключался строго один раз.\n\
    2.	 Вставляет содержимое заданного файла в место расположения этой директивы в исходном тексте программы.\n\
    3.	 Определяет идентификатор и последовательность символов, которая заменит этот идентификатор в тексте программы.\n\
    4.	 Заменяет все вхождения идентификатора макроса в исходном файле на последовательность символов.\n",
    "8) Для пятого поколения ЯП характерно: \n\
    1.	 Мобильны\n\
    2.	  Ориентированы на непрофессионального пользователя и на ЭВМ с параллельной структурой\n\
    3.	 Ориентированы на использование в конкретной ЭВМ\n\
    4.	Ориентированы на повышение интеллектуального уровня ЭВМ и интерфейса с языками  \n",
    "9) Отладчик (debugger)- \n\
    1.	 Программа, позволяющая контролировать ход выполнения программы (приостанавливать, выполнять пошагово)\n\
    2.	 Программа, предназначенная для запуска процесса операционной системы на основе загрузочного модуля.\n\
    3.	 Программа, принимающая один или несколько объектных модулей и формирующая на их основе загрузочный модуль.\n\
    4.	 Программа, преобразующая исходный код на одном языке программирования в исходный код на другом языке.\n",
    "10) Разработчик языка C: \n\
    1.	 Билл Гейтс\n\
    2.	 Деннис Ритчи\n\
    3.	 Кен Томпсон\n\
    4.	 Билл Клинтон\n",
    "11) Разработчик языка C++ \n\
    1.	 Кен Томпсон\n\
    2.   Бьёрн Страуструп\n\
    3.	 Деннис Ритчи\n\
    4.	 Билл Гейтс\n",
    "12) Что такое объектный модуль? \n\
    1.	 Текст программы на машинном языке, включающий машинные инструкции, словари, служебную информацию. \n\
    2.	 Результат работы компоновщика.\n\
    3.	 Программа, обычно входящая в состав операционной системы, предназначенная для запуска процесса операционной системы на основе загрузочного модуля.\n\
    4.	 Компонент системы программирования (или IDE) - программа,  позволяющая контролировать ход выполнения программы, просматривать и изменять области памяти.\n",
    "13) Что такое массив в программировании?\n\
    1. Ошибка в программе\n\
    2. Структура данных для хранения последовательности элементов одного типа\n\
    3. Функция для сортировки данных\n\
    4. Оператор для выполнения математических операций\n",
    "14)  Интерпретатор - это разновидность:  \n\
    1.	 Компилятора \n\
    2.	 Транслятора \n\
    3.	 Компоновщика \n\
    4.	 Отладчика\n",
    "15) Система программирования это - \n\
    1.	 Совокупность программных средств для программирования состоящая из компилятора, библиотек, компоновщика, загрузчика, отладчика и др.\n\
    2.	 Программа преобразующая исходный код в машинный код \n\
    3.	 Набор символов, разрешенных к использованию языком программирования. \n\
    4.	 Программа позволяющая подготовку исходного кода\n",
};

int* TestOAiP(int* answers) {
    answers = new int[15];
    setlocale(LC_ALL, "Russian");
    const int numquestionsOAIP = 15; //вычисление количества вопросов
    answers = new int[numquestionsOAIP];

    for (int i = 0; i < numquestionsOAIP; i++)
    {
        //ВЫВОД вопроса
        cout << questionsOAIP[i];
        //ВВОД ответа
        char tempAnswer;//текущий ответ, не проверенный на валидность
        cin >> tempAnswer;
        //<проверка на валидность> если ответ валидный, добавляем его в массив ответов
        while (!check_answer_validity(tempAnswer)) {
            cin >> tempAnswer;
            if (check_answer_validity(tempAnswer))
            {
                answers[i] = tempAnswer - '0';/*конвертируем символ числа в число*/
            }
        }
        if (check_answer_validity(tempAnswer))
        {
            answers[i] = tempAnswer - '0';/*конвертируем символ числа в число*/
        }
    }
    return answers;
}

